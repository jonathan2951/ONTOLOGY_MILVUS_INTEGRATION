apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "ontology-api.fullname" . }}
  labels:
    {{- include "ontology-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ontology-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ontology-api.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ tpl $value $ | quote }}
            {{- end }}
            {{- range .Values.secrets }}
            {{- $secret := . }}
            {{- range .keys }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret.name }}
                  key: {{ . }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 15
            failureThreshold: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "ontology-api.fullname" . }}-ui
  labels:
    {{- include "ontology-api.labels" . | nindent 4 }}-ui
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ontology-api.selectorLabels" . | nindent 6 }}-ui
  template:
    metadata:
      labels:
        {{- include "ontology-api.selectorLabels" . | nindent 8 }}-ui
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.streamlitTargetPort }}
              protocol: TCP
          command: ["streamlit", "run", "streamlit_app.py", "--server.port", "{{ .Values.service.streamlitTargetPort }}", "--server.address", "0.0.0.0"]
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ tpl $value $ | quote }}
            {{- end }}
            {{- range .Values.secrets }}
            {{- $secret := . }}
            {{- range .keys }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret.name }}
                  key: {{ . }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 15
            failureThreshold: 5

